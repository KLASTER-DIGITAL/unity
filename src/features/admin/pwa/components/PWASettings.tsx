import { useState, useEffect } from 'react';
import { toast } from 'sonner';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/shared/components/ui/card';
import { Button } from '@/shared/components/ui/button';
import { Input } from '@/shared/components/ui/input';
import { Label } from '@/shared/components/ui/label';
import { Switch } from '@/shared/components/ui/switch';
import { Badge } from '@/shared/components/ui/badge';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/shared/components/ui/select';
import { createClient } from '@/utils/supabase/client';
import {
  Settings,
  Bell,
  Wifi,
  Download,
  Save,
  Loader2,
  CheckCircle,
  AlertCircle
} from 'lucide-react';

interface PWASettings {
  enableNotifications: boolean;
  enableOfflineMode: boolean;
  enableInstallPrompt: boolean;
  installPromptTiming: 'immediate' | 'after_visits' | 'after_time' | 'manual';
  installPromptVisitsCount: number;
  installPromptDelayMinutes: number;
  installPromptLocation: 'onboarding' | 'user_cabinet' | 'both' | 'anywhere';
  installPromptTitle: string;
  installPromptDescription: string;
  installPromptButtonText: string;
  installPromptSkipText: string;
}

export function PWASettings() {
  const [isLoading, setIsLoading] = useState(false);
  const [isSaving, setIsSaving] = useState(false);
  const [settings, setSettings] = useState<PWASettings>({
    enableNotifications: true,
    enableOfflineMode: true,
    enableInstallPrompt: true,
    installPromptTiming: 'after_visits',
    installPromptVisitsCount: 3,
    installPromptDelayMinutes: 5,
    installPromptLocation: 'anywhere',
    installPromptTitle: 'pwa.install.title',
    installPromptDescription: 'pwa.install.description',
    installPromptButtonText: 'pwa.install.button',
    installPromptSkipText: 'pwa.install.skip',
  });

  const supabase = createClient();

  useEffect(() => {
    loadSettings();
  }, []);

  const loadSettings = async () => {
    setIsLoading(true);
    try {
      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        toast.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        return;
      }

      const { data, error } = await supabase
        .from('admin_settings')
        .select('value')
        .eq('key', 'pwa_settings');

      if (error) throw error;

      if (data && data.length > 0 && data[0]?.value) {
        setSettings(JSON.parse(data[0].value as string));
      }
    } catch (error) {
      console.error('Error loading PWA settings:', error);
      toast.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    } finally {
      setIsLoading(false);
    }
  };

  const handleSave = async () => {
    console.log('[PWASettings] Saving settings:', settings);
    setIsSaving(true);
    try {
      const payload = {
        key: 'pwa_settings',
        value: JSON.stringify(settings),
        category: 'pwa',
        updated_at: new Date().toISOString()
      };
      console.log('[PWASettings] Upsert payload:', payload);

      const { data, error } = await supabase
        .from('admin_settings')
        .upsert(payload, {
          onConflict: 'key'
        })
        .select();

      console.log('[PWASettings] Upsert result:', { data, error });

      if (error) throw error;

      toast.success('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ PWA —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! üì±');
    } catch (error: any) {
      console.error('[PWASettings] Error saving PWA settings:', error);
      toast.error(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${error.message}`);
    } finally {
      setIsSaving(false);
    }
  };

  if (isLoading) {
    return (
      <div className="flex items-center justify-center h-96">
        <Loader2 className="w-8 h-8 animate-spin text-primary" />
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-center justify-between">
        <div>
          <h2 className="text-2xl font-bold flex items-center gap-2">
            <Settings className="w-6 h-6" />
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ PWA
          </h2>
          <p className="text-sm text-muted-foreground mt-1">
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Progressive Web App –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞
          </p>
        </div>
        <Button onClick={handleSave} disabled={isSaving}>
          {isSaving ? (
            <>
              <Loader2 className="w-4 h-4 mr-2 animate-spin" />
              –°–æ—Ö—Ä–∞–Ω—è—é...
            </>
          ) : (
            <>
              <Save className="w-4 h-4 mr-2" />
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </>
          )}
        </Button>
      </div>

      {/* –§—É–Ω–∫—Ü–∏–∏ PWA */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Settings className="w-5 h-5" />
            –§—É–Ω–∫—Ü–∏–∏ PWA
          </CardTitle>
          <CardDescription>
            –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="flex items-center justify-between p-4 bg-muted rounded-lg border">
              <div className="flex items-center gap-3">
                <Bell className="w-5 h-5 text-primary" />
                <div>
                  <div className="font-medium">Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</div>
                  <p className="text-sm text-muted-foreground">
                    –†–∞–∑—Ä–µ—à–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                  </p>
                </div>
              </div>
              <Switch
                checked={settings.enableNotifications}
                onCheckedChange={(checked) => setSettings({ ...settings, enableNotifications: checked })}
              />
            </div>

            <div className="flex items-center justify-between p-4 bg-muted rounded-lg border">
              <div className="flex items-center gap-3">
                <Wifi className="w-5 h-5 text-primary" />
                <div>
                  <div className="font-medium">Offline —Ä–µ–∂–∏–º</div>
                  <p className="text-sm text-muted-foreground">
                    –†–∞–±–æ—Ç–∞ –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
                  </p>
                </div>
              </div>
              <Switch
                checked={settings.enableOfflineMode}
                onCheckedChange={(checked) => setSettings({ ...settings, enableOfflineMode: checked })}
              />
            </div>

            <div className="flex items-center justify-between p-4 bg-muted rounded-lg border">
              <div className="flex items-center gap-3">
                <Download className="w-5 h-5 text-primary" />
                <div>
                  <div className="font-medium">Install Prompt</div>
                  <p className="text-sm text-muted-foreground">
                    –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
                  </p>
                </div>
              </div>
              <Switch
                checked={settings.enableInstallPrompt}
                onCheckedChange={(checked) => setSettings({ ...settings, enableInstallPrompt: checked })}
              />
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Install Prompt –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      {settings.enableInstallPrompt && (
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Download className="w-5 h-5" />
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Install Prompt
            </CardTitle>
            <CardDescription>
              –ö–æ–≥–¥–∞ –∏ –≥–¥–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-6">
            {/* Timing */}
            <div className="space-y-2">
              <Label>–ö–æ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å</Label>
              <Select
                value={settings.installPromptTiming}
                onValueChange={(value: any) => setSettings({ ...settings, installPromptTiming: value })}
              >
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="immediate">–°—Ä–∞–∑—É –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤–∏–∑–∏—Ç–µ</SelectItem>
                  <SelectItem value="after_visits">–ü–æ—Å–ª–µ N –≤–∏–∑–∏—Ç–æ–≤</SelectItem>
                  <SelectItem value="after_time">–ü–æ—Å–ª–µ N –º–∏–Ω—É—Ç –Ω–∞ —Å–∞–π—Ç–µ</SelectItem>
                  <SelectItem value="manual">–¢–æ–ª—å–∫–æ –≤—Ä—É—á–Ω—É—é</SelectItem>
                </SelectContent>
              </Select>
            </div>

            {/* Visits Count */}
            {settings.installPromptTiming === 'after_visits' && (
              <div className="space-y-2">
                <Label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–∑–∏—Ç–æ–≤</Label>
                <Input
                  type="number"
                  min="1"
                  value={settings.installPromptVisitsCount}
                  onChange={(e) => setSettings({ ...settings, installPromptVisitsCount: parseInt(e.target.value) })}
                />
              </div>
            )}

            {/* Delay Minutes */}
            {settings.installPromptTiming === 'after_time' && (
              <div className="space-y-2">
                <Label>–ó–∞–¥–µ—Ä–∂–∫–∞ (–º–∏–Ω—É—Ç—ã)</Label>
                <Input
                  type="number"
                  min="1"
                  value={settings.installPromptDelayMinutes}
                  onChange={(e) => setSettings({ ...settings, installPromptDelayMinutes: parseInt(e.target.value) })}
                />
              </div>
            )}

            {/* Location */}
            <div className="space-y-2">
              <Label>–ì–¥–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å</Label>
              <Select
                value={settings.installPromptLocation}
                onValueChange={(value: any) => setSettings({ ...settings, installPromptLocation: value })}
              >
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="onboarding">–¢–æ–ª—å–∫–æ –Ω–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ</SelectItem>
                  <SelectItem value="user_cabinet">–¢–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ</SelectItem>
                  <SelectItem value="both">–ù–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ –∏ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ</SelectItem>
                  <SelectItem value="anywhere">–í–µ–∑–¥–µ</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}

