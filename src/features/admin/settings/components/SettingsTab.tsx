"use client";

import React, { useState } from 'react';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/shared/components/ui/tabs';
import { APISettingsTab } from '@/components/screens/admin/settings/APISettingsTab';
import { LanguagesTab } from '@/components/screens/admin/settings/LanguagesTab';
import { PWASettingsTab } from '@/components/screens/admin/settings/PWASettingsTab';
import { PushNotificationsTab } from '@/components/screens/admin/settings/PushNotificationsTab';
import { GeneralSettingsTab } from '@/components/screens/admin/settings/GeneralSettingsTab';
import { SystemSettingsTab } from '@/components/screens/admin/settings/SystemSettingsTab';
import { TelegramSettingsTab } from '@/components/screens/admin/settings/TelegramSettingsTab';

interface SettingsTabProps {
  className?: string;
  activeSubTab?: string;
  onSubTabChange?: (tab: string) => void;
}

export const SettingsTab: React.FC<SettingsTabProps> = ({
  className,
  activeSubTab,
  onSubTabChange
}) => {
  const [activeTab, setActiveTab] = useState(activeSubTab || 'api');
  const [searchQuery, setSearchQuery] = useState('');

  const handleTabChange = (value: string) => {
    setActiveTab(value);
    onSubTabChange?.(value);
  };

  const tabs = [
    { value: 'api', label: 'API', icon: 'üîë', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API –∫–ª—é—á–∞–º–∏' },
    { value: 'telegram', label: 'Telegram', icon: 'üì±', description: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram' },
    { value: 'languages', label: '–Ø–∑—ã–∫–∏', icon: 'üåç', description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —è–∑—ã–∫–æ–≤' },
    { value: 'pwa', label: 'PWA', icon: 'üì±', description: 'PWA –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' },
    { value: 'push', label: 'Push', icon: 'üîî', description: 'Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' },
    { value: 'general', label: '–û–±—â–∏–µ', icon: '‚öôÔ∏è', description: '–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' },
    { value: 'system', label: '–°–∏—Å—Ç–µ–º–∞', icon: 'üñ•Ô∏è', description: '–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' }
  ];

  const filteredTabs = tabs.filter(tab =>
    tab.label.toLowerCase().includes(searchQuery.toLowerCase()) ||
    tab.description.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return (
    <div className={`admin-panel ${className}`}>
      <div className="admin-p-6 lg:admin-p-8 admin-pb-4 admin-max-w-[1400px] admin-mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <header className="admin-mb-10">
          <h1 className="admin-text-4xl admin-font-bold admin-text-gray-900 admin-mb-3">
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
          </h1>
          <p className="admin-text-lg admin-text-gray-600">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ –∞—Å–ø–µ–∫—Ç–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã
          </p>
        </header>

        {/* –ü–æ–∏—Å–∫ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º */}
        <div className="admin-search-container admin-mb-10 admin-max-w-xl">
          <svg
            className="admin-search-icon"
            width="20"
            height="20"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fillRule="evenodd"
              d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
              clipRule="evenodd"
            />
          </svg>
          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="admin-search-input admin-text-base"
            aria-label="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º"
          />
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–∞–º */}
        <Tabs value={activeTab} onValueChange={handleTabChange} className="w-full">
          <nav className="admin-mb-10" aria-label="–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º">
            <TabsList className="admin-flex admin-flex-wrap admin-gap-3 admin-bg-white admin-border admin-border-gray-200 admin-p-2 admin-rounded-xl admin-shadow-sm">
              {tabs.map((tab) => (
                <TabsTrigger
                  key={tab.value}
                  value={tab.value}
                  className="admin-flex admin-items-center admin-gap-3 admin-px-6 admin-py-4 admin-rounded-lg admin-font-medium admin-text-base admin-transition-all admin-duration-200 admin-text-gray-700 hover:admin-text-gray-900 hover:admin-bg-gray-50 focus-visible:admin-ring-2 focus-visible:admin-ring-admin-primary focus-visible:admin-ring-offset-2 data-[state=active]:admin-bg-admin-primary data-[state=active]:admin-text-white data-[state=active]:admin-shadow-md"
                  aria-label={`${tab.label} - ${tab.description}`}
                >
                  <span className="admin-text-xl" aria-hidden="true">{tab.icon}</span>
                  <span>{tab.label}</span>
                </TabsTrigger>
              ))}
            </TabsList>
          </nav>

          {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ */}
          <main className="min-h-[500px]">
            {filteredTabs.length === 0 && searchQuery ? (
              <div className="admin-text-center admin-py-12">
                <p className="admin-text-gray-500 admin-text-lg admin-mb-2">
                  –ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö "{searchQuery}"
                </p>
                <button
                  onClick={() => setSearchQuery('')}
                  className="admin-btn admin-btn-outline"
                >
                  –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫
                </button>
              </div>
            ) : (
              <>
                <TabsContent value="api">
                  <APISettingsTab />
                </TabsContent>

                <TabsContent value="telegram">
                  <TelegramSettingsTab />
                </TabsContent>

                <TabsContent value="languages">
                  <LanguagesTab />
                </TabsContent>

                <TabsContent value="pwa">
                  <PWASettingsTab />
                </TabsContent>

                <TabsContent value="push">
                  <PushNotificationsTab />
                </TabsContent>

                <TabsContent value="general">
                  <GeneralSettingsTab />
                </TabsContent>

                <TabsContent value="system">
                  <SystemSettingsTab />
                </TabsContent>
              </>
            )}
          </main>
        </Tabs>
      </div>
    </div>
  );
};