import { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/shared/components/ui/card";
import { Button } from "@/shared/components/ui/button";
import { Badge } from "@/shared/components/ui/badge";
import { Progress } from "@/shared/components/ui/progress";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/shared/components/ui/tabs";
import { useTranslations } from "@/shared/lib/i18n";
import { getEntries, type DiaryEntry } from "@/shared/lib/api";
import { calculateUserStats, type UserStats } from "@/utils/statsCalculator";
import { toast } from "sonner";
import {
  Download,
  Sparkles,
  TrendingUp,
  BarChart3,
  Calendar,
  Heart,
  Star,
  Brain,
  FileText,
  Share2,
  Crown,
  Target,
  Loader2
} from "lucide-react";

export function ReportsScreen({ userData }: { userData?: any }) {
  // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const t = useTranslations(userData?.language || 'ru');
  const [selectedPeriod, setSelectedPeriod] = useState("month");
  const [isLoading, setIsLoading] = useState(true);
  const [entries, setEntries] = useState<DiaryEntry[]>([]);
  const [stats, setStats] = useState<UserStats | null>(null);

  useEffect(() => {
    loadData();
  }, [userData?.id]);

  const loadData = async () => {
    try {
      setIsLoading(true);
      // ‚úÖ FIXED: userData has structure {user: {...}, profile: {...}}
      const userId = userData?.user?.id || userData?.id || "anonymous";
      console.log("[REPORTS] Loading data for user:", userId);
      const entriesData = await getEntries(userId, 100);

      console.log("Loaded entries for reports:", entriesData);
      setEntries(entriesData);

      // –í—ã—á–∏—Å–ª–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      const calculatedStats = calculateUserStats(entriesData);
      setStats(calculatedStats);

      console.log("Calculated stats:", calculatedStats);
    } catch (error) {
      console.error("Error loading data:", error);
      toast.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ");
    } finally {
      setIsLoading(false);
    }
  };

  // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü –∏ –≥–æ–¥
  const currentPeriod = new Date().toLocaleDateString('ru-RU', {
    year: 'numeric',
    month: 'long'
  });

  const monthlyReport = stats ? {
    period: currentPeriod,
    totalEntries: stats.totalEntries,
    streakDays: stats.currentStreak,
    topMood: stats.moodDistribution[0]?.mood || "üòä",
    keyAchievements: stats.keyAchievements,
    moodDistribution: stats.moodDistribution,
    topCategories: stats.topCategories,
    personalInsights: stats.personalInsights
  } : {
    period: currentPeriod,
    totalEntries: 0,
    streakDays: 0,
    topMood: "üòä",
    keyAchievements: [],
    moodDistribution: [],
    topCategories: [],
    personalInsights: []
  };

  const aiQuotes = [
    "–¢–≤–æ–π –ø—É—Ç—å –∫ —Ü–µ–ª–∏ –≤ 10–∫–º –Ω–∞—á–∞–ª—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞. –ò —Ç—ã –µ–≥–æ —Å–¥–µ–ª–∞–ª! üèÉ‚Äç‚ôÇÔ∏è",
    "–ö–∞–∂–¥–∞—è –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–∞—è –∫–Ω–∏–≥–∞ - —ç—Ç–æ –Ω–æ–≤—ã–π –º–∏—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –æ—Ç–∫—Ä—ã–ª –¥–ª—è —Å–µ–±—è üìö",
    "–¢–≤–æ—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å —Å–µ–º—å–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ç—ã —Ü–µ–Ω–∏—à—å –±–ª–∏–∑–∫–∏—Ö –ª—é–¥–µ–π ‚ù§Ô∏è"
  ];

  const weeklyStats = [
    { week: "1 –Ω–µ–¥–µ–ª—è", entries: 6, mood: 4.2 },
    { week: "2 –Ω–µ–¥–µ–ª—è", entries: 5, mood: 4.5 },
    { week: "3 –Ω–µ–¥–µ–ª—è", entries: 7, mood: 4.8 },
    { week: "4 –Ω–µ–¥–µ–ª—è", entries: 5, mood: 4.3 }
  ];

  if (isLoading) {
    return (
      <div className="pb-20 min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <Loader2 className="h-8 w-8 animate-spin text-purple-600 mx-auto mb-4" />
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="pb-20 min-h-screen bg-gray-50 overflow-x-hidden scrollbar-hide">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-gradient-to-r from-purple-600 to-blue-600 p-6 text-white">
        <div className="flex items-center gap-3 mb-4">
          <div className="w-12 h-12 bg-white/20 rounded-full flex items-center justify-center backdrop-blur-sm">
            <Brain className="h-6 w-6" />
          </div>
          <div>
            <h2 className="text-xl">AI –û–±–∑–æ—Ä—ã</h2>
            <p className="text-purple-100">–ê–Ω–∞–ª–∏–∑ —Ç–≤–æ–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π</p>
          </div>
        </div>

        <div className="flex gap-2 overflow-x-auto scrollbar-hide">
          {["week", "month", "quarter"].map(period => (
            <Button
              key={period}
              variant={selectedPeriod === period ? "secondary" : "outline"}
              size="sm"
              onClick={() => setSelectedPeriod(period)}
              className={selectedPeriod === period ? "" : "border-white/30 text-white hover:bg-white/10"}
            >
              {period === "week" ? "–ù–µ–¥–µ–ª—è" : period === "month" ? "–ú–µ—Å—è—Ü" : "–ö–≤–∞—Ä—Ç–∞–ª"}
            </Button>
          ))}
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –æ—Ç—á–µ—Ç */}
      <div className="p-4">
        <Card className="border-purple-200">
          <CardHeader>
            <div className="flex items-center justify-between">
              <div>
                <CardTitle className="flex items-center gap-2">
                  <Sparkles className="h-5 w-5 text-purple-600" />
                  –û—Ç—á–µ—Ç –∑–∞ {monthlyReport.period}
                </CardTitle>
                <p className="text-sm text-gray-600">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—Ç AI</p>
              </div>
              <Badge className="bg-purple-100 text-purple-800">
                <Crown className="h-3 w-3 mr-1" />
                –ü—Ä–µ–º–∏—É–º
              </Badge>
            </div>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-2 gap-4 mb-6">
              <div className="text-center">
                <div className="text-2xl text-purple-600 mb-1">{monthlyReport.totalEntries}</div>
                <div className="text-sm text-gray-600">–ó–∞–ø–∏—Å–µ–π</div>
              </div>
              <div className="text-center">
                <div className="text-2xl text-green-600 mb-1">{monthlyReport.streakDays}</div>
                <div className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π</div>
              </div>
            </div>

            <div className="space-y-4">
              <Button className="w-full bg-purple-600 hover:bg-purple-700">
                <Download className="h-4 w-4 mr-2" />
                –°–∫–∞—á–∞—Ç—å PDF –æ—Ç—á–µ—Ç
              </Button>
              <Button variant="outline" className="w-full">
                <Share2 className="h-4 w-4 mr-2" />
                –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∏ —Å –¥–µ—Ç–∞–ª—è–º–∏ */}
      <div className="px-4">
        <Tabs defaultValue="mood">
          <TabsList className="grid w-full grid-cols-3">
            <TabsTrigger value="mood">–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</TabsTrigger>
            <TabsTrigger value="categories">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</TabsTrigger>
            <TabsTrigger value="insights">–ò–Ω—Å–∞–π—Ç—ã</TabsTrigger>
          </TabsList>

          <TabsContent value="mood" className="mt-4">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Heart className="h-5 w-5 text-pink-500" />
                  –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {monthlyReport.moodDistribution.map(item => (
                    <div key={item.mood} className="flex items-center gap-3">
                      <div className="text-2xl">{item.mood}</div>
                      <div className="flex-1">
                        <div className="flex justify-between mb-1">
                          <span>{item.label}</span>
                          <span className="text-sm text-gray-500">{item.count} –∑–∞–ø–∏—Å–µ–π</span>
                        </div>
                        <Progress value={item.percentage} className="h-2" />
                      </div>
                      <div className="text-sm text-gray-600">{item.percentage}%</div>
                    </div>
                  ))}
                </div>

                <div className="mt-6 p-4 bg-pink-50 rounded-lg">
                  <p className="text-sm text-pink-800">
                    <strong>–í—ã–≤–æ–¥ AI:</strong> –í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –ø—Ä–µ–æ–±–ª–∞–¥–∞–ª–∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏. 
                    –û—Å–æ–±–µ–Ω–Ω–æ –∑–∞–º–µ—Ç–µ–Ω —Ä–æ—Å—Ç –∑–∞–ø–∏—Å–µ–π —Å –≤–æ—Å—Ç–æ—Ä–≥–æ–º - —ç—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º, —á—Ç–æ —Ç—ã 
                    –∞–∫—Ç–∏–≤–Ω–µ–µ –¥–æ—Å—Ç–∏–≥–∞–µ—à—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π! üéâ
                  </p>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="categories" className="mt-4">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <BarChart3 className="h-5 w-5 text-blue-500" />
                  –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {monthlyReport.topCategories.map((category, index) => (
                    <div key={category.name} className="flex items-center justify-between">
                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                          <span className="text-sm">{index + 1}</span>
                        </div>
                        <div>
                          <h4>{category.name}</h4>
                          <p className="text-sm text-gray-600">{category.count} –∑–∞–ø–∏—Å–µ–π</p>
                        </div>
                      </div>
                      <Badge 
                        variant={category.trend.startsWith('+') ? 'default' : 
                                category.trend.startsWith('-') ? 'destructive' : 'secondary'}
                      >
                        {category.trend.startsWith('+') && <TrendingUp className="h-3 w-3 mr-1" />}
                        {category.trend}
                      </Badge>
                    </div>
                  ))}
                </div>

                <div className="mt-6 p-4 bg-blue-50 rounded-lg">
                  <p className="text-sm text-blue-800">
                    <strong>–ù–∞–±–ª—é–¥–µ–Ω–∏–µ AI:</strong> –¢–≤–æ–π —Ñ–æ–∫—É—Å –Ω–∞ —Å–ø–æ—Ä—Ç–µ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É—Å–∏–ª–∏–ª—Å—è. 
                    –≠—Ç–æ –æ—Ç–ª–∏—á–Ω–∞—è —Ç–µ–Ω–¥–µ–Ω—Ü–∏—è –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã! üí™
                  </p>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="insights" className="mt-4">
            <div className="space-y-4">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Brain className="h-5 w-5 text-purple-500" />
                    –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    {monthlyReport.personalInsights.map((insight, index) => (
                      <div key={index} className="flex items-start gap-3 p-3 bg-purple-50 rounded-lg">
                        <Star className="h-5 w-5 text-purple-600 flex-shrink-0 mt-0.5" />
                        <p className="text-sm text-purple-800">{insight}</p>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Sparkles className="h-5 w-5 text-yellow-500" />
                    AI —Ü–∏—Ç–∞—Ç—ã –º–µ—Å—è—Ü–∞
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    {aiQuotes.map((quote, index) => (
                      <div key={index} className="p-4 bg-gradient-to-r from-yellow-50 to-orange-50 rounded-lg border-l-4 border-yellow-400">
                        <p className="text-sm text-gray-800 italic">"{quote}"</p>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Target className="h-5 w-5 text-green-500" />
                    –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <div className="p-3 bg-green-50 rounded-lg">
                      <h4 className="text-green-800 mb-1">–ü—Ä–æ–¥–æ–ª–∂–∞–π –±–µ–≥–∞—Ç—å</h4>
                      <p className="text-sm text-green-700">–¢—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏ –∫ —Ü–µ–ª–∏ –≤ 10–∫–º!</p>
                    </div>
                    <div className="p-3 bg-blue-50 rounded-lg">
                      <h4 className="text-blue-800 mb-1">–ë–æ–ª—å—à–µ –∑–∞–ø–∏—Å–µ–π –æ —Ä–∞–±–æ—Ç–µ</h4>
                      <p className="text-sm text-blue-700">–ü–æ–ø—Ä–æ–±—É–π —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ —Ä–∞–±–æ—á–∏–µ –ø–æ–±–µ–¥—ã</p>
                    </div>
                    <div className="p-3 bg-purple-50 rounded-lg">
                      <h4 className="text-purple-800 mb-1">–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è</h4>
                      <p className="text-sm text-purple-700">–ö–∞–∫ –Ω–∞—Å—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å–∏ –æ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ?</p>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
}