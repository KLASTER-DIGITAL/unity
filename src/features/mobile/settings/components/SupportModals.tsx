import { useState } from "react";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from "@/shared/components/ui/dialog";
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/shared/components/ui/accordion";
import { Button } from "@/shared/components/ui/button";
import { Input } from "@/shared/components/ui/input";
import { Textarea } from "@/shared/components/ui/textarea";
import { Label } from "@/shared/components/ui/label";
import { toast } from "sonner";
import { Mail, Star, HelpCircle } from "lucide-react";

// ============================================
// Contact Support Modal
// ============================================

interface ContactSupportModalProps {
  open: boolean;
  onClose: () => void;
  userEmail?: string;
}

export function ContactSupportModal({ open, onClose, userEmail }: ContactSupportModalProps) {
  const [subject, setSubject] = useState("");
  const [message, setMessage] = useState("");
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!subject || !message) {
      toast.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
      return;
    }

    setIsSubmitting(true);
    
    // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    toast.success("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.");
    setSubject("");
    setMessage("");
    setIsSubmitting(false);
    onClose();
  };

  return (
    <Dialog open={open} onOpenChange={onClose}>
      <DialogContent className="max-w-md">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <Mail className="h-5 w-5" />
            –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
          </DialogTitle>
          <DialogDescription>
            –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ
          </DialogDescription>
        </DialogHeader>

        <form onSubmit={handleSubmit} className="space-y-4 mt-4">
          <div className="space-y-2">
            <Label htmlFor="email">Email</Label>
            <Input
              id="email"
              type="email"
              value={userEmail || ""}
              disabled
              className="bg-muted"
            />
          </div>

          <div className="space-y-2">
            <Label htmlFor="subject">–¢–µ–º–∞</Label>
            <Input
              id="subject"
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –∑–∞–ø–∏—Å–∏"
              value={subject}
              onChange={(e) => setSubject(e.target.value)}
              required
            />
          </div>

          <div className="space-y-2">
            <Label htmlFor="message">–°–æ–æ–±—â–µ–Ω–∏–µ</Label>
            <Textarea
              id="message"
              placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ..."
              value={message}
              onChange={(e) => setMessage(e.target.value)}
              rows={5}
              required
            />
          </div>

          <div className="flex justify-end gap-2 pt-4">
            <Button type="button" variant="outline" onClick={onClose}>
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button type="submit" disabled={isSubmitting}>
              {isSubmitting ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"}
            </Button>
          </div>
        </form>
      </DialogContent>
    </Dialog>
  );
}

// ============================================
// Rate App Modal
// ============================================

interface RateAppModalProps {
  open: boolean;
  onClose: () => void;
}

export function RateAppModal({ open, onClose }: RateAppModalProps) {
  const [rating, setRating] = useState(0);
  const [hoveredRating, setHoveredRating] = useState(0);
  const [comment, setComment] = useState("");
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (rating === 0) {
      toast.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É");
      return;
    }

    setIsSubmitting(true);
    
    // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    toast.success("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É! ‚≠ê");
    setRating(0);
    setComment("");
    setIsSubmitting(false);
    onClose();
  };

  return (
    <Dialog open={open} onOpenChange={onClose}>
      <DialogContent className="max-w-md">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <Star className="h-5 w-5" />
            –û—Ü–µ–Ω–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
          </DialogTitle>
          <DialogDescription>
            –í–∞—à–µ –º–Ω–µ–Ω–∏–µ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ
          </DialogDescription>
        </DialogHeader>

        <form onSubmit={handleSubmit} className="space-y-6 mt-4">
          <div className="space-y-2">
            <Label>–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞</Label>
            <div className="flex gap-2 justify-center py-4">
              {[1, 2, 3, 4, 5].map((star) => (
                <button
                  key={star}
                  type="button"
                  onClick={() => setRating(star)}
                  onMouseEnter={() => setHoveredRating(star)}
                  onMouseLeave={() => setHoveredRating(0)}
                  className="transition-transform hover:scale-110"
                >
                  <Star
                    className={`h-10 w-10 ${
                      star <= (hoveredRating || rating)
                        ? 'fill-yellow-400 text-yellow-400'
                        : 'text-muted-foreground/30'
                    }`}
                  />
                </button>
              ))}
            </div>
            {rating > 0 && (
              <p className="text-center text-sm text-muted-foreground">
                {rating === 5 && "–û—Ç–ª–∏—á–Ω–æ! üéâ"}
                {rating === 4 && "–•–æ—Ä–æ—à–æ! üëç"}
                {rating === 3 && "–ù–µ–ø–ª–æ—Ö–æ üòä"}
                {rating === 2 && "–ú–æ–∂–Ω–æ –ª—É—á—à–µ üòï"}
                {rating === 1 && "–ß—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫? üò¢"}
              </p>
            )}
          </div>

          <div className="space-y-2">
            <Label htmlFor="comment">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</Label>
            <Textarea
              id="comment"
              placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –∏–ª–∏ —á—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å..."
              value={comment}
              onChange={(e) => setComment(e.target.value)}
              rows={4}
            />
          </div>

          <div className="flex justify-end gap-2">
            <Button type="button" variant="outline" onClick={onClose}>
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button type="submit" disabled={isSubmitting || rating === 0}>
              {isSubmitting ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"}
            </Button>
          </div>
        </form>
      </DialogContent>
    </Dialog>
  );
}

// ============================================
// FAQ Modal
// ============================================

interface FAQModalProps {
  open: boolean;
  onClose: () => void;
}

export function FAQModal({ open, onClose }: FAQModalProps) {
  const faqs = [
    {
      question: "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å?",
      answer: "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '+' –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏–ª–∏ –Ω–µ—É–¥–∞—á–∏, –∏ –Ω–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å'. AI –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à—É –∑–∞–ø–∏—Å—å –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ."
    },
    {
      question: "–ß—Ç–æ —Ç–∞–∫–æ–µ AI-–∞–Ω–∞–ª–∏–∑?",
      answer: "AI-–∞–Ω–∞–ª–∏–∑ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –≤–∞—à–µ–π –∑–∞–ø–∏—Å–∏ (–ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ, –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ–µ), –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (—Ä–∞–±–æ—Ç–∞, –∑–¥–æ—Ä–æ–≤—å–µ, –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∏ —Ç.–¥.) –∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤. –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à–∏ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è."
    },
    {
      question: "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–º–∏—É–º?",
      answer: "–ü—Ä–µ–º–∏—É–º-–≤–µ—Ä—Å–∏—è –≤–∫–ª—é—á–∞–µ—Ç: –ø—Ä–µ–º–∏—É–º-—Ç–µ–º—ã (–ó–∞–∫–∞—Ç, –û–∫–µ–∞–Ω, –õ–µ—Å), –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç (JSON/CSV/ZIP) –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É. –§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–º–∏—É–º–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏."
    },
    {
      question: "–ö–∞–∫ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ?",
      answer: "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞ ‚Üí –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ. –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç (JSON, CSV –∏–ª–∏ ZIP) –∏ —Å–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª. –≠–∫—Å–ø–æ—Ä—Ç –≤–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –≤–∞—à–∏ –∑–∞–ø–∏—Å–∏, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É."
    },
    {
      question: "–ë–µ–∑–æ–ø–∞—Å–Ω—ã –ª–∏ –º–æ–∏ –¥–∞–Ω–Ω—ã–µ?",
      answer: "–î–∞! –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –∑–∞—â–∏—â–µ–Ω–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Supabase —Å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º Row Level Security (RLS) - —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ç–æ–ª—å–∫–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ –∑–∞–ø–∏—Å–∏. –ù–∏–∫—Ç–æ –¥—Ä—É–≥–æ–π, –≤–∫–ª—é—á–∞—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤, –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∞—à–∏–º –ª–∏—á–Ω—ã–º –¥–∞–Ω–Ω—ã–º."
    },
    {
      question: "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π?",
      answer: "–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –æ–ø—ã—Ç (XP) –∑–∞ –∫–∞–∂–¥—É—é —Å–æ–∑–¥–∞–Ω–Ω—É—é –∑–∞–ø–∏—Å—å. –ù–∞–∫–∞–ø–ª–∏–≤–∞—è XP, –≤—ã –ø–æ–≤—ã—à–∞–µ—Ç–µ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—ã (–±–µ–π–¥–∂–∏). –ï—Å—Ç—å —Ç–∞–∫–∂–µ —ç—Ç–∞–ø—ã (milestones) –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π, –¥–Ω–∏ –ø–æ–¥—Ä—è–¥ –∏ –¥—Ä—É–≥–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è."
    },
    {
      question: "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ñ–ª–∞–π–Ω?",
      answer: "–î–∞! UNITY - —ç—Ç–æ Progressive Web App (PWA), –∫–æ—Ç–æ—Ä–æ–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ñ–ª–∞–π–Ω –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏. –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–ø–∏—Å–∏ –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –∏ –æ–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏."
    },
    {
      question: "–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è?",
      answer: "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –Ø–∑—ã–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —è–∑—ã–∫ –∏–∑ —Å–ø–∏—Å–∫–∞. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç 7 —è–∑—ã–∫–æ–≤: —Ä—É—Å—Å–∫–∏–π, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –∏—Å–ø–∞–Ω—Å–∫–∏–π, –Ω–µ–º–µ—Ü–∫–∏–π, —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π, –∫–∏—Ç–∞–π—Å–∫–∏–π –∏ —è–ø–æ–Ω—Å–∫–∏–π."
    }
  ];

  return (
    <Dialog open={open} onOpenChange={onClose}>
      <DialogContent className="max-w-2xl max-h-[80vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <HelpCircle className="h-5 w-5" />
            –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
          </DialogTitle>
          <DialogDescription>
            –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ UNITY
          </DialogDescription>
        </DialogHeader>

        <Accordion type="single" collapsible className="w-full mt-4">
          {faqs.map((faq, index) => (
            <AccordionItem key={index} value={`item-${index}`}>
              <AccordionTrigger className="text-left">
                {faq.question}
              </AccordionTrigger>
              <AccordionContent className="text-muted-foreground">
                {faq.answer}
              </AccordionContent>
            </AccordionItem>
          ))}
        </Accordion>

        <div className="flex justify-end gap-2 mt-6 pt-4 border-t">
          <Button variant="outline" onClick={onClose}>
            –ó–∞–∫—Ä—ã—Ç—å
          </Button>
        </div>
      </DialogContent>
    </Dialog>
  );
}

