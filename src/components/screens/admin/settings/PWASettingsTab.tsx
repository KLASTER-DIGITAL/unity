"use client";

import React, { useState } from 'react';
import { toast } from 'sonner';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';
import '../../../../styles/admin/admin-theme.css';
import '../../../../styles/admin/admin-typography.css';
import '../../../../styles/admin/admin-cards.css';
import '../../../../styles/admin/admin-buttons.css';
import '../../../../styles/admin/admin-forms.css';
import '../../../../styles/admin/admin-tables.css';
import '../../../../styles/admin/admin-utilities.css';
import '../../../../styles/admin/admin-responsive.css';

const installationData = [
  { month: 'Jan', installs: 120, uninstalls: 15 },
  { month: 'Feb', installs: 150, uninstalls: 12 },
  { month: 'Mar', installs: 200, uninstalls: 18 },
  { month: 'Apr', installs: 180, uninstalls: 20 },
  { month: 'May', installs: 250, uninstalls: 22 },
  { month: 'Jun', installs: 300, uninstalls: 25 },
];

const platformData = [
  { name: 'Desktop', value: 45, color: '#3b82f6' },
  { name: 'Mobile', value: 35, color: '#10b981' },
  { name: 'Tablet', value: 20, color: '#f59e0b' },
];

export const PWASettingsTab: React.FC = () => {
  const [manifest, setManifest] = useState({
    appName: '–î–Ω–µ–≤–Ω–∏–∫ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–π',
    shortName: '–î–Ω–µ–≤–Ω–∏–∫',
    description: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π',
    themeColor: '#3b82f6',
    backgroundColor: '#ffffff'
  });

  const [settings, setSettings] = useState({
    enableNotifications: true,
    enableOfflineMode: true,
    enableInstallPrompt: true
  });

  const [stats, setStats] = useState({
    totalInstalls: 1234,
    retentionRate: 89,
    averageRating: 4.8,
    activeUsers: 567
  });

  const [isSaving, setIsSaving] = useState(false);

  const handleSaveManifest = async () => {
    setIsSaving(true);
    try {
      const token = localStorage.getItem('sb-ecuwuzqlwdkkdncampnc-auth-token');
      if (!token) {
        toast.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        return;
      }

      // Save manifest settings
      const manifestResponse = await fetch('https://ecuwuzqlwdkkdncampnc.supabase.co/functions/v1/make-server-9729c493/admin/settings', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          key: 'pwa_manifest',
          value: JSON.stringify(manifest)
        })
      });

      // Save PWA settings
      const settingsResponse = await fetch('https://ecuwuzqlwdkkdncampnc.supabase.co/functions/v1/make-server-9729c493/admin/settings', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          key: 'pwa_settings',
          value: JSON.stringify(settings)
        })
      });

      if (manifestResponse.ok && settingsResponse.ok) {
        toast.success('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ PWA —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! üì±');
      } else {
        toast.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ PWA');
      }
    } catch (error) {
      console.error('Error saving PWA settings:', error);
      toast.error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    } finally {
      setIsSaving(false);
    }
  };

  const handlePublishUpdate = async () => {
    try {
      toast.info('–ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è PWA –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ... üöÄ');
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
    }
  };

  const handleAnalyzeMetrics = async () => {
    try {
      toast.info('–ê–Ω–∞–ª–∏–∑ –º–µ—Ç—Ä–∏–∫ PWA –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ... üìä');
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –º–µ—Ç—Ä–∏–∫');
    }
  };

  return (
    <div className="admin-space-y-8">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞ */}
      <header className="admin-flex admin-items-center admin-gap-4 admin-pb-4 admin-border-b admin-border-gray-200">
        <div className="admin-p-3 admin-bg-admin-primary-lighter admin-rounded-lg admin-text-2xl" aria-hidden="true">
          üì±
        </div>
        <div>
          <h2 className="admin-text-2xl admin-font-semibold admin-text-gray-900">
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ PWA
          </h2>
          <p className="admin-text-sm admin-text-gray-600 admin-mt-1">
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Progressive Web App –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞
          </p>
        </div>
        <div className="admin-ml-auto admin-flex admin-gap-2">
          <div className="admin-px-3 admin-py-1 admin-bg-admin-success-lighter admin-text-admin-success admin-rounded-full admin-text-xs admin-font-medium admin-flex admin-items-center admin-gap-1">
            <div className="admin-w-2 admin-h-2 admin-bg-admin-success admin-rounded-full" aria-hidden="true"></div>
            –ê–∫—Ç–∏–≤–µ–Ω
          </div>
          <div className="admin-px-3 admin-py-1 admin-bg-admin-primary-lighter admin-text-admin-primary admin-rounded-full admin-text-xs admin-font-medium">
            üì± {stats.totalInstalls.toLocaleString()} —É—Å—Ç–∞–Ω–æ–≤–æ–∫
          </div>
        </div>
      </header>

      <div className="admin-grid admin-grid-cols-1 lg:admin-grid-cols-3 admin-gap-8">
        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PWA */}
        <div className="lg:admin-col-span-2 admin-space-y-6">
          {/* –ú–∞–Ω–∏—Ñ–µ—Å—Ç PWA */}
          <div className="admin-card">
            <div className="admin-card-header">
              <h3 className="admin-card-title admin-flex admin-items-center admin-gap-2">
                üìã –ú–∞–Ω–∏—Ñ–µ—Å—Ç PWA
              </h3>
              <p className="admin-card-description">
                –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-–º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
              </p>
            </div>
            <div className="admin-card-content admin-space-y-6">
              <div className="admin-grid admin-grid-cols-1 md:admin-grid-cols-2 admin-gap-6">
                <div className="admin-space-y-3">
                  <label htmlFor="app-name" className="admin-font-medium admin-text-gray-900">
                    –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                  </label>
                  <input
                    id="app-name"
                    type="text"
                    value={manifest.appName}
                    onChange={(e) => setManifest(prev => ({ ...prev, appName: e.target.value }))}
                    className="admin-input"
                  />
                </div>
                <div className="admin-space-y-3">
                  <label htmlFor="short-name" className="admin-font-medium admin-text-gray-900">
                    –ö–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
                  </label>
                  <input
                    id="short-name"
                    type="text"
                    value={manifest.shortName}
                    onChange={(e) => setManifest(prev => ({ ...prev, shortName: e.target.value }))}
                    className="admin-input"
                  />
                </div>
              </div>

              <div className="admin-space-y-3">
                <label htmlFor="description" className="admin-font-medium admin-text-gray-900">
                  –û–ø–∏—Å–∞–Ω–∏–µ
                </label>
                <input
                  id="description"
                  type="text"
                  value={manifest.description}
                  onChange={(e) => setManifest(prev => ({ ...prev, description: e.target.value }))}
                  className="admin-input"
                />
              </div>

              <div className="admin-grid admin-grid-cols-1 md:admin-grid-cols-2 admin-gap-6">
                <div className="admin-space-y-3">
                  <label htmlFor="theme-color" className="admin-font-medium admin-text-gray-900">
                    –¶–≤–µ—Ç —Ç–µ–º—ã
                  </label>
                  <div className="admin-flex admin-gap-3 admin-items-center">
                    <input
                      id="theme-color"
                      type="text"
                      value={manifest.themeColor}
                      onChange={(e) => setManifest(prev => ({ ...prev, themeColor: e.target.value }))}
                      className="admin-input admin-flex-1"
                    />
                    <div
                      className="admin-w-12 admin-h-12 admin-rounded-lg admin-border-2 admin-border-gray-300 admin-shadow-sm"
                      style={{ backgroundColor: manifest.themeColor }}
                      aria-hidden="true"
                    />
                  </div>
                </div>
                <div className="admin-space-y-3">
                  <label htmlFor="bg-color" className="admin-font-medium admin-text-gray-900">
                    –¶–≤–µ—Ç —Ñ–æ–Ω–∞
                  </label>
                  <div className="admin-flex admin-gap-3 admin-items-center">
                    <input
                      id="bg-color"
                      type="text"
                      value={manifest.backgroundColor}
                      onChange={(e) => setManifest(prev => ({ ...prev, backgroundColor: e.target.value }))}
                      className="admin-input admin-flex-1"
                    />
                    <div
                      className="admin-w-12 admin-h-12 admin-rounded-lg admin-border-2 admin-border-gray-300 admin-shadow-sm"
                      style={{ backgroundColor: manifest.backgroundColor }}
                      aria-hidden="true"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* –§—É–Ω–∫—Ü–∏–∏ PWA */}
          <div className="admin-card">
            <div className="admin-card-header">
              <h3 className="admin-card-title admin-flex admin-items-center admin-gap-2">
                ‚öôÔ∏è –§—É–Ω–∫—Ü–∏–∏ PWA
              </h3>
              <p className="admin-card-description">
                –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
              </p>
            </div>
            <div className="admin-card-content admin-space-y-6">
              <div className="admin-grid admin-grid-cols-1 md:admin-grid-cols-2 admin-gap-6">
                <div className="admin-flex admin-items-center admin-justify-between admin-p-4 admin-bg-gray-50 admin-rounded-lg admin-border admin-border-gray-200">
                  <div>
                    <div className="admin-font-medium admin-text-gray-900 admin-mb-1">
                      üîî Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                    </div>
                    <p className="admin-text-sm admin-text-gray-600">
                      –†–∞–∑—Ä–µ—à–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                    </p>
                  </div>
                  <div className="admin-switch">
                    <input
                      id="enable-notifications"
                      type="checkbox"
                      checked={settings.enableNotifications}
                      onChange={(e) => setSettings(prev => ({ ...prev, enableNotifications: e.target.checked }))}
                      className="admin-sr-only"
                    />
                    <div className="admin-switch-slider"></div>
                  </div>
                </div>

                <div className="admin-flex admin-items-center admin-justify-between admin-p-4 admin-bg-gray-50 admin-rounded-lg admin-border admin-border-gray-200">
                  <div>
                    <div className="admin-font-medium admin-text-gray-900 admin-mb-1">
                      üì± –û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º
                    </div>
                    <p className="admin-text-sm admin-text-gray-600">
                      –†–∞–±–æ—Ç–∞ –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
                    </p>
                  </div>
                  <div className="admin-switch">
                    <input
                      id="enable-offline"
                      type="checkbox"
                      checked={settings.enableOfflineMode}
                      onChange={(e) => setSettings(prev => ({ ...prev, enableOfflineMode: e.target.checked }))}
                      className="admin-sr-only"
                    />
                    <div className="admin-switch-slider"></div>
                  </div>
                </div>

                <div className="admin-flex admin-items-center admin-justify-between admin-p-4 admin-bg-admin-warning-lighter admin-rounded-lg admin-border admin-border-admin-warning-light md:admin-col-span-2">
                  <div>
                    <div className="admin-font-medium admin-text-gray-900 admin-mb-1">
                      üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
                    </div>
                    <p className="admin-text-sm admin-text-gray-600">
                      –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                    </p>
                  </div>
                  <div className="admin-switch">
                    <input
                      id="enable-install-prompt"
                      type="checkbox"
                      checked={settings.enableInstallPrompt}
                      onChange={(e) => setSettings(prev => ({ ...prev, enableInstallPrompt: e.target.checked }))}
                      className="admin-sr-only"
                    />
                    <div className="admin-switch-slider"></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="admin-space-y-6">
          {/* –ì—Ä–∞—Ñ–∏–∫ —É—Å—Ç–∞–Ω–æ–≤–æ–∫ */}
          <div className="admin-card">
            <div className="admin-card-header">
              <h3 className="admin-card-title admin-flex admin-items-center admin-gap-2">
                üìà –£—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA
              </h3>
            </div>
            <div className="admin-card-content">
              <div className="admin-h-48">
                <ResponsiveContainer width="100%" height="100%">
                  <LineChart data={installationData}>
                    <CartesianGrid strokeDasharray="3 3" stroke="var(--admin-gray-200)" />
                    <XAxis dataKey="month" stroke="var(--admin-gray-500)" fontSize={10} />
                    <YAxis stroke="var(--admin-gray-500)" fontSize={10} />
                    <Tooltip
                      contentStyle={{
                        backgroundColor: 'var(--admin-white)',
                        border: '1px solid var(--admin-gray-200)',
                        borderRadius: '8px',
                        boxShadow: 'var(--admin-shadow-md)'
                      }}
                    />
                    <Line
                      type="monotone"
                      dataKey="installs"
                      stroke="var(--admin-success)"
                      strokeWidth={2}
                      dot={{ fill: 'var(--admin-success)', strokeWidth: 2, r: 4 }}
                    />
                  </LineChart>
                </ResponsiveContainer>
              </div>
            </div>
          </div>

          {/* –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º */}
          <div className="admin-card">
            <div className="admin-card-header">
              <h3 className="admin-card-title admin-flex admin-items-center admin-gap-2">
                üì± –ü–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º
              </h3>
            </div>
            <div className="admin-card-content">
              <div className="admin-h-48">
                <ResponsiveContainer width="100%" height="100%">
                  <PieChart>
                    <Pie
                      data={platformData}
                      cx="50%"
                      cy="50%"
                      outerRadius={60}
                      fill="#8884d8"
                      dataKey="value"
                      label={({ name, value }) => `${name}: ${value}%`}
                    >
                      {platformData.map((entry, index) => (
                        <Cell key={`cell-${index}`} fill={entry.color} />
                      ))}
                    </Pie>
                    <Tooltip
                      contentStyle={{
                        backgroundColor: 'var(--admin-white)',
                        border: '1px solid var(--admin-gray-200)',
                        borderRadius: '8px',
                        boxShadow: 'var(--admin-shadow-md)'
                      }}
                    />
                  </PieChart>
                </ResponsiveContainer>
              </div>
            </div>
          </div>

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–æ–∫ */}
          <div className="admin-card">
            <div className="admin-card-header">
              <h3 className="admin-card-title admin-flex admin-items-center admin-gap-2">
                üìä –ú–µ—Ç—Ä–∏–∫–∏
              </h3>
            </div>
            <div className="admin-card-content admin-space-y-4">
              <div className="admin-grid admin-grid-cols-1 admin-gap-4">
                <div className="admin-p-4 admin-bg-admin-primary-lighter admin-rounded-lg admin-text-center admin-border admin-border-admin-primary-light">
                  <div className="admin-text-2xl admin-font-semibold admin-text-admin-primary admin-mb-1">
                    {stats.totalInstalls.toLocaleString()}
                  </div>
                  <div className="admin-text-gray-600 admin-text-sm">–í—Å–µ–≥–æ —É—Å—Ç–∞–Ω–æ–≤–æ–∫</div>
                </div>
                <div className="admin-p-4 admin-bg-admin-success-lighter admin-rounded-lg admin-text-center admin-border admin-border-admin-success-light">
                  <div className="admin-text-2xl admin-font-semibold admin-text-admin-success admin-mb-1">{stats.retentionRate}%</div>
                  <div className="admin-text-gray-600 admin-text-sm">Retention rate</div>
                </div>
                <div className="admin-p-4 admin-bg-admin-warning-lighter admin-rounded-lg admin-text-center admin-border admin-border-admin-warning-light">
                  <div className="admin-text-2xl admin-font-semibold admin-text-admin-warning admin-mb-1">‚≠ê {stats.averageRating}</div>
                  <div className="admin-text-gray-600 admin-text-sm">–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –î–µ–π—Å—Ç–≤–∏—è –∏ –∫–Ω–æ–ø–∫–∏ */}
      <div className="admin-flex admin-justify-center admin-gap-4">
        <button
          onClick={handleSaveManifest}
          disabled={isSaving}
          className="admin-btn admin-btn-success admin-font-medium"
        >
          {isSaving ? (
            <div className="admin-flex admin-items-center admin-gap-2">
              <div className="admin-spinner" />
              –°–æ—Ö—Ä–∞–Ω—è—é...
            </div>
          ) : (
            <>
              <span className="mr-2">üíæ</span>
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </>
          )}
        </button>
        <button
          onClick={handlePublishUpdate}
          className="admin-btn admin-btn-warning admin-font-medium"
        >
          <span className="mr-2">üöÄ</span>
          –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        </button>
        <button
          onClick={handleAnalyzeMetrics}
          className="admin-btn admin-btn-primary admin-font-medium"
        >
          <span className="mr-2">üìä</span>
          –ê–Ω–∞–ª–∏–∑ –º–µ—Ç—Ä–∏–∫
        </button>
      </div>
    </div>
  );
};