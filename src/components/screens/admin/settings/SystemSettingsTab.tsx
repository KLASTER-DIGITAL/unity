"use client";

import React, { useState } from 'react';
import { toast } from 'sonner';
import { SimpleChart } from '../../../../shared/components/SimpleChart';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/shared/components/ui/card';
import { Button } from '@/shared/components/ui/button';
import { Badge } from '@/shared/components/ui/badge';
import { Monitor, Database, Server, HardDrive, Wifi, RotateCw, Save, Activity, AlertCircle } from 'lucide-react';

const systemMetrics = [
  { time: '00:00', cpu: 45, memory: 67, disk: 23, network: 12 },
  { time: '04:00', cpu: 52, memory: 71, disk: 25, network: 15 },
  { time: '08:00', cpu: 78, memory: 84, disk: 28, network: 45 },
  { time: '12:00', cpu: 65, memory: 76, disk: 26, network: 32 },
  { time: '16:00', cpu: 58, memory: 69, disk: 24, network: 28 },
  { time: '20:00', cpu: 49, memory: 63, disk: 22, network: 18 },
];

export const SystemSettingsTab: React.FC = () => {
  const [systemStatus, setSystemStatus] = useState({
    database: 'online',
    api: 'online',
    storage: 'online',
    cache: 'online'
  });

  const [metrics, setMetrics] = useState({
    cpu: 45,
    memory: 67,
    disk: 23,
    network: 12
  });

  const [isRestarting, setIsRestarting] = useState<string | null>(null);
  const [isBackingUp, setIsBackingUp] = useState(false);

  const handleRestartService = async (service: string) => {
    setIsRestarting(service);
    try {
      const token = localStorage.getItem('sb-ecuwuzqlwdkkdncampnc-auth-token');
      if (!token) {
        toast.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        return;
      }

      // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º admin-api –≤–º–µ—Å—Ç–æ make-server
      const response = await fetch(`https://ecuwuzqlwdkkdncampnc.supabase.co/functions/v1/admin-api/system/restart/${service.toLowerCase()}`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        toast.success(`–°–µ—Ä–≤–∏—Å ${service} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω! üîÑ`);
      } else {
        const errorData = await response.json().catch(() => ({}));
        toast.error(errorData.error || `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ ${service}`);
      }
    } catch (error) {
      console.error(`Error restarting ${service}:`, error);
      toast.error(`–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ ${service}`);
    } finally {
      setIsRestarting(null);
    }
  };

  const handleBackupDatabase = async () => {
    setIsBackingUp(true);
    try {
      const token = localStorage.getItem('sb-ecuwuzqlwdkkdncampnc-auth-token');
      if (!token) {
        toast.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        return;
      }

      const response = await fetch('https://ecuwuzqlwdkkdncampnc.supabase.co/functions/v1/make-server-9729c493/admin/backup', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        const data = await response.json();
        toast.success('–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! üíæ');
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∫–æ–ø–∏–∏
        if (data.backupUrl) {
          const linkElement = document.createElement('a');
          linkElement.setAttribute('href', data.backupUrl);
          linkElement.setAttribute('download', `unity-backup-${new Date().toISOString().split('T')[0]}.sql`);
          linkElement.click();
        }
      } else {
        const errorData = await response.json().catch(() => ({}));
        toast.error(errorData.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏');
      }
    } catch (error) {
      console.error('Error creating backup:', error);
      toast.error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏');
    } finally {
      setIsBackingUp(false);
    }
  };

  const handleRestoreBackup = () => {
    toast.info('–§—É–Ω–∫—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üìÇ');
  };

  return (
    <div className="space-y-8">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞ */}
      <div className="flex items-center justify-between pb-4 border-b">
        <div className="flex items-center gap-3">
          <div className="p-2 bg-primary/10 rounded-lg">
            <Monitor className="w-6 h-6 text-primary" />
          </div>
          <div>
            <h2 className="text-2xl font-bold">–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
            <p className="text-sm text-muted-foreground">
              –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
            </p>
          </div>
        </div>
        <div className="flex gap-2">
          <Badge variant="success" className="gap-1">
            <div className="w-2 h-2 bg-green-500 rounded-full" />
            –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç
          </Badge>
          <Badge variant="outline">
            <Activity className="w-3 h-3 mr-1" />
            –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω
          </Badge>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã */}
        <div className="lg:col-span-2 space-y-6">
          {/* –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Activity className="w-5 h-5" />
                –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
              </CardTitle>
              <CardDescription>
                –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="p-6 bg-green-50 dark:bg-green-950/20 rounded-lg border border-green-200 dark:border-green-800 relative overflow-hidden">
                  <div className="absolute top-2 right-2">
                    <div className="w-3 h-3 bg-green-500 rounded-full" />
                  </div>
                  <div className="text-center">
                    <Database className="w-12 h-12 text-green-600 dark:text-green-500 mx-auto mb-2" />
                    <div className="font-medium mb-1">–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö</div>
                    <div className="text-muted-foreground text-sm mb-3">PostgreSQL</div>
                    <Badge variant="success">–†–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ</Badge>
                  </div>
                </div>

                <div className="p-6 bg-blue-50 dark:bg-blue-950/20 rounded-lg border border-blue-200 dark:border-blue-800 relative overflow-hidden">
                  <div className="absolute top-2 right-2">
                    <div className="w-3 h-3 bg-blue-500 rounded-full" />
                  </div>
                  <div className="text-center">
                    <Server className="w-12 h-12 text-blue-600 dark:text-blue-500 mx-auto mb-2" />
                    <div className="font-medium mb-1">API —Å–µ—Ä–≤–µ—Ä</div>
                    <div className="text-muted-foreground text-sm mb-3">Edge Functions</div>
                    <Badge className="bg-blue-600 text-white">–í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</Badge>
                  </div>
                </div>

                <div className="p-6 bg-purple-50 dark:bg-purple-950/20 rounded-lg border border-purple-200 dark:border-purple-800 relative overflow-hidden">
                  <div className="absolute top-2 right-2">
                    <div className="w-3 h-3 bg-purple-500 rounded-full" />
                  </div>
                  <div className="text-center">
                    <HardDrive className="w-12 h-12 text-purple-600 dark:text-purple-500 mx-auto mb-2" />
                    <div className="font-medium mb-1">–•—Ä–∞–Ω–∏–ª–∏—â–µ</div>
                    <div className="text-muted-foreground text-sm mb-3">Supabase Storage</div>
                    <Badge className="bg-purple-600 text-white">–î–æ—Å—Ç—É–ø–Ω–æ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ</Badge>
                  </div>
                </div>

                <div className="p-6 bg-yellow-50 dark:bg-yellow-950/20 rounded-lg border border-yellow-200 dark:border-yellow-800 relative overflow-hidden">
                  <div className="absolute top-2 right-2">
                    <div className="w-3 h-3 bg-yellow-500 rounded-full" />
                  </div>
                  <div className="text-center">
                    <Wifi className="w-12 h-12 text-yellow-600 dark:text-yellow-500 mx-auto mb-2" />
                    <div className="font-medium mb-1">–ö—ç—à</div>
                    <div className="text-muted-foreground text-sm mb-3">Redis</div>
                    <Badge className="bg-yellow-600 text-white">–ë—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–ª–∏–∫</Badge>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* –ú–µ—Ç—Ä–∏–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤ */}
        <div className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Activity className="w-5 h-5" />
                –†–µ—Å—É—Ä—Å—ã —Å–∏—Å—Ç–µ–º—ã
              </CardTitle>
              <CardDescription>
                –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="space-y-3">
                <div className="space-y-2">
                  <div className="flex justify-between text-sm">
                    <span className="text-muted-foreground">CPU</span>
                    <span className="font-medium">{metrics.cpu}%</span>
                  </div>
                  <div className="w-full bg-muted rounded-full h-2">
                    <div
                      className="bg-yellow-500 h-2 rounded-full transition-all"
                      style={{ width: `${metrics.cpu}%` }}
                      aria-label={`–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU: ${metrics.cpu}%`}
                    />
                  </div>
                </div>

                <div className="space-y-2">
                  <div className="flex justify-between text-sm">
                    <span className="text-muted-foreground">–ü–∞–º—è—Ç—å</span>
                    <span className="font-medium">{metrics.memory}%</span>
                  </div>
                  <div className="w-full bg-muted rounded-full h-2">
                    <div
                      className="bg-red-500 h-2 rounded-full transition-all"
                      style={{ width: `${metrics.memory}%` }}
                      aria-label={`–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${metrics.memory}%`}
                    />
                  </div>
                </div>

                <div className="space-y-2">
                  <div className="flex justify-between text-sm">
                    <span className="text-muted-foreground">–î–∏—Å–∫</span>
                    <span className="font-medium">{metrics.disk}%</span>
                  </div>
                  <div className="w-full bg-muted rounded-full h-2">
                    <div
                      className="bg-blue-500 h-2 rounded-full transition-all"
                      style={{ width: `${metrics.disk}%` }}
                      aria-label={`–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: ${metrics.disk}%`}
                    />
                  </div>
                </div>

                <div className="space-y-2">
                  <div className="flex justify-between text-sm">
                    <span className="text-muted-foreground">–°–µ—Ç—å</span>
                    <span className="font-medium">{metrics.network}%</span>
                  </div>
                  <div className="w-full bg-muted rounded-full h-2">
                    <div
                      className="bg-green-500 h-2 rounded-full transition-all"
                      style={{ width: `${metrics.network}%` }}
                      aria-label={`–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏: ${metrics.network}%`}
                    />
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>

      {/* –ì—Ä–∞—Ñ–∏–∫–∏ –º–µ—Ç—Ä–∏–∫ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Activity className="w-5 h-5" />
            –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤ (24—á)
          </CardTitle>
          <CardDescription>
            –ì—Ä–∞—Ñ–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
          </CardDescription>
        </CardHeader>
        <CardContent>
          <SimpleChart
            data={systemMetrics}
            xAxisKey="time"
            title="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤"
            type="line"
          />
        </CardContent>
      </Card>

      {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Server className="w-5 h-5" />
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏
          </CardTitle>
          <CardDescription>
            –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3">
            <Button
              onClick={() => handleRestartService('API')}
              disabled={isRestarting === 'API'}
              variant="default"
            >
              {isRestarting === 'API' ? (
                <>
                  <div className="mr-2 h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent" />
                  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...
                </>
              ) : (
                <>
                  <Server className="w-4 h-4 mr-2" />
                  API —Å–µ—Ä–≤–µ—Ä
                </>
              )}
            </Button>

            <Button
              onClick={() => handleRestartService('Database')}
              disabled={isRestarting === 'Database'}
              className="bg-green-600 hover:bg-green-700 text-white"
            >
              {isRestarting === 'Database' ? (
                <>
                  <div className="mr-2 h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent" />
                  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...
                </>
              ) : (
                <>
                  <Database className="w-4 h-4 mr-2" />
                  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
                </>
              )}
            </Button>

            <Button
              onClick={() => handleRestartService('Cache')}
              disabled={isRestarting === 'Cache'}
              className="bg-yellow-600 hover:bg-yellow-700 text-white"
            >
              {isRestarting === 'Cache' ? (
                <>
                  <div className="mr-2 h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent" />
                  –û—á–∏—Å—Ç–∫–∞...
                </>
              ) : (
                <>
                  <Wifi className="w-4 h-4 mr-2" />
                  –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à
                </>
              )}
            </Button>

            <Button
              onClick={() => handleRestartService('Storage')}
              disabled={isRestarting === 'Storage'}
              variant="outline"
            >
              {isRestarting === 'Storage' ? (
                <>
                  <div className="mr-2 h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent" />
                  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...
                </>
              ) : (
                <>
                  <HardDrive className="w-4 h-4 mr-2" />
                  –•—Ä–∞–Ω–∏–ª–∏—â–µ
                </>
              )}
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <HardDrive className="w-5 h-5" />
            –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
          </CardTitle>
          <CardDescription>
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –∫–æ–ø–∏—è–º–∏ –¥–∞–Ω–Ω—ã—Ö
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-6">
            <div className="flex gap-3">
              <Button
                onClick={handleBackupDatabase}
                disabled={isBackingUp}
                className="bg-green-600 hover:bg-green-700 text-white"
              >
                {isBackingUp ? (
                  <>
                    <div className="mr-2 h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent" />
                    –°–æ–∑–¥–∞—é –∫–æ–ø–∏—é...
                  </>
                ) : (
                  <>
                    <Save className="w-4 h-4 mr-2" />
                    –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
                  </>
                )}
              </Button>

              <Button
                onClick={handleRestoreBackup}
                variant="outline"
              >
                <RotateCw className="w-4 h-4 mr-2" />
                –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –∫–æ–ø–∏–∏
              </Button>
            </div>

            <div className="p-4 bg-muted rounded-lg border">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-center">
                <div>
                  <div className="font-medium mb-1">–ü–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–ø–∏—è</div>
                  <div className="text-sm text-muted-foreground">2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥</div>
                </div>
                <div>
                  <div className="font-medium mb-1">–†–∞–∑–º–µ—Ä</div>
                  <div className="text-sm text-muted-foreground">45.2 MB</div>
                </div>
                <div>
                  <div className="font-medium mb-1">–°—Ç–∞—Ç—É—Å</div>
                  <Badge variant="success">–£—Å–ø–µ—à–Ω–æ</Badge>
                </div>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <AlertCircle className="w-5 h-5" />
            –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏
          </CardTitle>
          <CardDescription>
            –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥–∞—Ö —Å–∏—Å—Ç–µ–º—ã
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="bg-slate-950 text-green-400 p-6 rounded-lg font-mono text-sm max-h-64 overflow-y-auto border border-slate-800">
            <div className="space-y-1">
              <div className="text-green-300">[2024-01-15 10:30:15] INFO: API request processed successfully</div>
              <div className="text-green-300">[2024-01-15 10:30:12] INFO: User authentication successful</div>
              <div className="text-blue-300">[2024-01-15 10:30:08] INFO: Database connection established</div>
              <div className="text-green-300">[2024-01-15 10:30:05] INFO: Cache cleared successfully</div>
              <div className="text-green-300">[2024-01-15 10:30:02] INFO: System startup completed</div>
              <div className="text-yellow-300">[2024-01-15 10:29:58] WARN: High memory usage detected</div>
              <div className="text-green-300">[2024-01-15 10:29:55] INFO: Scheduled backup completed</div>
              <div className="text-green-300">[2024-01-15 10:29:50] INFO: API rate limit reset</div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};