"use client";

import React, { useState } from 'react';
import { toast } from 'sonner';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';

const notificationStats = [
  { metric: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', value: 12345, color: '#3b82f6' },
  { metric: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ', value: 89, color: '#10b981', percentage: true },
  { metric: '–û—Ç–∫—Ä—ã—Ç–æ', value: 23, color: '#8b5cf6', percentage: true },
  { metric: 'CTR', value: 5.2, color: '#f59e0b', percentage: true },
];

export const PushNotificationsTab: React.FC = () => {
  const [notification, setNotification] = useState({
    title: 'üéâ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!',
    body: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –Ω–æ–≤–æ–π —Ü–µ–ª–∏ –≤ –≤–∞—à–µ–º –¥–Ω–µ–≤–Ω–∏–∫–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.',
    icon: '',
    badge: ''
  });

  const [settings, setSettings] = useState({
    enablePush: true,
    enableScheduled: false,
    enableSegmentation: true
  });

  const [rating, setRating] = useState(4);
  const [isSending, setIsSending] = useState(false);
  const [isSavingSettings, setIsSavingSettings] = useState(false);

  const handleSendNotification = async () => {
    if (!notification.title || !notification.body) {
      toast.error('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
      return;
    }

    setIsSending(true);
    try {
      const token = localStorage.getItem('sb-ecuwuzqlwdkkdncampnc-auth-token');
      if (!token) {
        toast.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        return;
      }

      const response = await fetch('https://ecuwuzqlwdkkdncampnc.supabase.co/functions/v1/make-server-9729c493/admin/send-notification', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          title: notification.title,
          body: notification.body,
          icon: notification.icon,
          badge: notification.badge
        })
      });

      if (response.ok) {
        toast.success('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! üöÄ');
        // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        setNotification({
          title: 'üéâ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!',
          body: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –Ω–æ–≤–æ–π —Ü–µ–ª–∏ –≤ –≤–∞—à–µ–º –¥–Ω–µ–≤–Ω–∏–∫–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.',
          icon: '',
          badge: ''
        });
      } else {
        const errorData = await response.json().catch(() => ({}));
        toast.error(errorData.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
      }
    } catch (error) {
      console.error('Error sending notification:', error);
      toast.error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    } finally {
      setIsSending(false);
    }
  };

  const handleSaveSettings = async () => {
    try {
      const token = localStorage.getItem('sb-ecuwuzqlwdkkdncampnc-auth-token');
      if (!token) {
        toast.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        return;
      }

      const response = await fetch('https://ecuwuzqlwdkkdncampnc.supabase.co/functions/v1/make-server-9729c493/admin/settings', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          key: 'push_notification_settings',
          value: JSON.stringify(settings)
        })
      });

      if (response.ok) {
        toast.success('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! üîî');
      } else {
        const errorData = await response.json().catch(() => ({}));
        toast.error(errorData.error || '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫');
      }
    } catch (error) {
      console.error('Error saving push settings:', error);
      toast.error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    }
  };

  return (
    <div className="admin-space-y-8">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞ */}
      <header className="admin-flex admin-items-center admin-gap-4 admin-pb-4 admin-border-b admin-border-gray-200">
        <div className="admin-p-3 admin-bg-admin-primary-lighter admin-rounded-lg admin-text-2xl" aria-hidden="true">
          üîî
        </div>
        <div>
          <h2 className="admin-text-2xl admin-font-semibold admin-text-gray-900">
            Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
          </h2>
          <p className="admin-text-sm admin-text-gray-600 admin-mt-1">
            –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          </p>
        </div>
        <div className="admin-ml-auto admin-flex admin-gap-2">
          <div className="admin-px-3 admin-py-1 admin-bg-admin-success-lighter admin-text-admin-success admin-rounded-full admin-text-xs admin-font-medium admin-flex admin-items-center admin-gap-1">
            <div className="admin-w-2 admin-h-2 admin-bg-admin-success admin-rounded-full" aria-hidden="true"></div>
            –ê–∫—Ç–∏–≤–µ–Ω
          </div>
          <div className="admin-px-3 admin-py-1 admin-bg-admin-primary-lighter admin-text-admin-primary admin-rounded-full admin-text-xs admin-font-medium">
            üì® 12,345 –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
          </div>
        </div>
      </header>

      <div className="admin-grid admin-grid-cols-1 lg:admin-grid-cols-3 admin-gap-8">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
        <div className="lg:admin-col-span-2 admin-space-y-6">
          {/* –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
          <div className="admin-card">
            <div className="admin-card-header">
              <h3 className="admin-card-title admin-flex admin-items-center admin-gap-2">
                üìù –°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
              </h3>
              <p className="admin-card-description">
                –û—Ç–ø—Ä–∞–≤–∫–∞ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
              </p>
            </div>
            <div className="admin-card-content admin-space-y-6">
              <div className="admin-space-y-4">
                <div className="admin-space-y-3">
                  <label htmlFor="notification-title" className="admin-font-medium admin-text-gray-900">
                    –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                  </label>
                  <input
                    id="notification-title"
                    type="text"
                    value={notification.title}
                    onChange={(e) => setNotification(prev => ({ ...prev, title: e.target.value }))}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
                    className="admin-input"
                  />
                </div>

                <div className="admin-space-y-3">
                  <label htmlFor="notification-body" className="admin-font-medium admin-text-gray-900">
                    –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                  </label>
                  <textarea
                    id="notification-body"
                    value={notification.body}
                    onChange={(e) => setNotification(prev => ({ ...prev, body: e.target.value }))}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
                    rows={4}
                    className="admin-input admin-textarea"
                  />
                </div>

                <div className="admin-grid admin-grid-cols-1 md:admin-grid-cols-2 admin-gap-6">
                  <div className="admin-space-y-3">
                    <label htmlFor="notification-icon" className="admin-font-medium admin-text-gray-900">
                      –ò–∫–æ–Ω–∫–∞ (URL)
                    </label>
                    <input
                      id="notification-icon"
                      type="text"
                      value={notification.icon}
                      onChange={(e) => setNotification(prev => ({ ...prev, icon: e.target.value }))}
                      placeholder="https://example.com/icon.png"
                      className="admin-input"
                    />
                  </div>
                  <div className="admin-space-y-3">
                    <label htmlFor="notification-badge" className="admin-font-medium admin-text-gray-900">
                      –ë–µ–π–¥–∂ (URL)
                    </label>
                    <input
                      id="notification-badge"
                      type="text"
                      value={notification.badge}
                      onChange={(e) => setNotification(prev => ({ ...prev, badge: e.target.value }))}
                      placeholder="https://example.com/badge.png"
                      className="admin-input"
                    />
                  </div>
                </div>

                <div className="admin-flex admin-justify-center admin-pt-4">
                  <button
                    onClick={handleSendNotification}
                    disabled={!notification.title || !notification.body || isSending}
                    className="admin-btn admin-btn-primary admin-font-medium admin-text-lg"
                  >
                    {isSending ? (
                      <div className="admin-flex admin-items-center admin-gap-2">
                        <div className="admin-spinner" />
                        –û—Ç–ø—Ä–∞–≤–ª—è—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...
                      </div>
                    ) : (
                      <>
                        <span className="mr-2">üöÄ</span>
                        –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                      </>
                    )}
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div className="admin-space-y-6">
          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
          <div className="admin-card">
            <div className="admin-card-header">
              <h3 className="admin-card-title admin-flex admin-items-center admin-gap-2">
                üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
              </h3>
              <p className="admin-card-description">
                –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
              </p>
            </div>
            <div className="admin-card-content admin-space-y-4">
              <div className="admin-grid admin-grid-cols-1 admin-gap-4">
                {notificationStats.map((stat, index) => (
                  <div key={index} className="admin-p-4 admin-bg-gray-50 admin-rounded-lg admin-text-center admin-border admin-border-gray-200">
                    <div className={`admin-text-2xl admin-font-semibold admin-mb-2 ${stat.percentage ? 'admin-text-admin-success' : 'admin-text-admin-primary'}`}>
                      {stat.percentage ? `${stat.value}%` : stat.value.toLocaleString()}
                    </div>
                    <div className="admin-text-gray-600 admin-text-sm">{stat.metric}</div>
                  </div>
                ))}
              </div>

              {/* –†–µ–π—Ç–∏–Ω–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ */}
              <div className="admin-p-4 admin-bg-admin-warning-lighter admin-rounded-lg admin-border admin-border-admin-warning-light">
                <div className="admin-text-center admin-mb-4">
                  <div className="admin-font-medium admin-text-gray-900 admin-mb-2">–û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</div>
                  <div className="admin-flex admin-justify-center admin-gap-1">
                    {[1, 2, 3, 4, 5].map((star) => (
                      <button
                        key={star}
                        onClick={() => setRating(star)}
                        className={`admin-text-3xl admin-transition-all admin-duration-200 admin-transform hover:admin-scale-110 ${
                          star <= rating ? 'admin-text-admin-warning' : 'admin-text-gray-400'
                        }`}
                        aria-label={`–û—Ü–µ–Ω–∫–∞ ${star} –∏–∑ 5`}
                      >
                        ‚òÖ
                      </button>
                    ))}
                  </div>
                  <div className="admin-text-gray-700 admin-text-sm admin-mt-2">
                    –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: <span className="admin-font-semibold admin-text-admin-warning">{rating}/5</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
          <div className="admin-card">
            <div className="admin-card-header">
              <h3 className="admin-card-title admin-flex admin-items-center admin-gap-2">
                ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
              </h3>
              <p className="admin-card-description">
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
              </p>
            </div>
            <div className="admin-card-content admin-space-y-6">
              <div className="admin-space-y-4">
                <div className="admin-flex admin-items-center admin-justify-between admin-p-4 admin-bg-gray-50 admin-rounded-lg admin-border admin-border-gray-200">
                  <div>
                    <div className="admin-font-medium admin-text-gray-900 admin-mb-1">
                      üîî –í–∫–ª—é—á–∏—Ç—å push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                    </div>
                    <p className="admin-text-sm admin-text-gray-600">
                      –†–∞–∑—Ä–µ—à–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                    </p>
                  </div>
                  <div className="admin-switch">
                    <input
                      id="enable-push"
                      type="checkbox"
                      checked={settings.enablePush}
                      onChange={(e) => setSettings(prev => ({ ...prev, enablePush: e.target.checked }))}
                      className="admin-sr-only"
                    />
                    <div className="admin-switch-slider"></div>
                  </div>
                </div>

                <div className="admin-flex admin-items-center admin-justify-between admin-p-4 admin-bg-gray-50 admin-rounded-lg admin-border admin-border-gray-200">
                  <div>
                    <div className="admin-font-medium admin-text-gray-900 admin-mb-1">
                      ‚è∞ –û—Ç–ª–æ–∂–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
                    </div>
                    <p className="admin-text-sm admin-text-gray-600">
                      –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    </p>
                  </div>
                  <div className="admin-switch">
                    <input
                      id="enable-scheduled"
                      type="checkbox"
                      checked={settings.enableScheduled}
                      onChange={(e) => setSettings(prev => ({ ...prev, enableScheduled: e.target.checked }))}
                      className="admin-sr-only"
                    />
                    <div className="admin-switch-slider"></div>
                  </div>
                </div>

                <div className="admin-flex admin-items-center admin-justify-between admin-p-4 admin-bg-gray-50 admin-rounded-lg admin-border admin-border-gray-200">
                  <div>
                    <div className="admin-font-medium admin-text-gray-900 admin-mb-1">
                      üéØ –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏
                    </div>
                    <p className="admin-text-sm admin-text-gray-600">
                      –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–∑–Ω—ã–º –≥—Ä—É–ø–ø–∞–º
                    </p>
                  </div>
                  <div className="admin-switch">
                    <input
                      id="enable-segmentation"
                      type="checkbox"
                      checked={settings.enableSegmentation}
                      onChange={(e) => setSettings(prev => ({ ...prev, enableSegmentation: e.target.checked }))}
                      className="admin-sr-only"
                    />
                    <div className="admin-switch-slider"></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –î–µ–π—Å—Ç–≤–∏—è –∏ –∫–Ω–æ–ø–∫–∏ */}
      <div className="admin-flex admin-justify-center admin-gap-4">
        <button
          onClick={handleSaveSettings}
          disabled={isSavingSettings}
          className="admin-btn admin-btn-success admin-font-medium"
        >
          {isSavingSettings ? (
            <div className="admin-flex admin-items-center admin-gap-2">
              <div className="admin-spinner" />
              –°–æ—Ö—Ä–∞–Ω—è—é...
            </div>
          ) : (
            <>
              <span className="mr-2">üíæ</span>
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </>
          )}
        </button>
        <button
          onClick={() => {
            toast.info('–ê–Ω–∞–ª–∏–∑ –∫–∞–º–ø–∞–Ω–∏–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üìä');
          }}
          className="admin-btn admin-btn-outline admin-font-medium"
        >
          <span className="mr-2">üìä</span>
          –ê–Ω–∞–ª–∏–∑ –∫–∞–º–ø–∞–Ω–∏–π
        </button>
        <button
          onClick={() => {
            toast.info('A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üéØ');
          }}
          className="admin-btn admin-btn-outline admin-font-medium"
        >
          <span className="mr-2">üéØ</span>
          A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        </button>
      </div>
    </div>
  );
};