/**
 * Sentry Integration for UNITY-v2
 * 
 * –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—à–∏–±–æ–∫ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ production
 * 
 * @author UNITY Team
 * @date 2025-10-21
 */

import * as Sentry from '@sentry/react';

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Sentry
 * 
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ main.tsx
 * 
 * @example
 * import { initSentry } from '@/shared/lib/monitoring/sentry';
 * initSentry();
 */
export function initSentry() {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤ production
  if (import.meta.env.PROD) {
    const dsn = import.meta.env.VITE_SENTRY_DSN;

    if (!dsn) {
      console.warn('‚ö†Ô∏è [Sentry] VITE_SENTRY_DSN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. Sentry –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.');
      return;
    }

    Sentry.init({
      dsn,
      
      // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
      integrations: [
        // Browser Tracing –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        Sentry.browserTracingIntegration({
          // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (tracingOrigins deprecated, use tracePropagationTargets)
          // tracingOrigins: [
          //   'localhost',
          //   /^https:\/\/unity-wine\.vercel\.app/,
          //   /^https:\/\/.*\.supabase\.co/,
          // ],
        }),
        
        // Session Replay –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –æ—à–∏–±–æ–∫
        Sentry.replayIntegration({
          // –ú–∞—Å–∫–∏—Ä—É–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          maskAllText: true,
          blockAllMedia: true,
        }),

        // Feedback –û–¢–ö–õ–Æ–ß–ï–ù - –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É "Error invoking post: Method not found"
        // Fixes UNITY-V2-B
        // Sentry.feedbackIntegration({
        //   colorScheme: 'system',
        //   showBranding: false,
        //   autoInject: false,
        // }),
      ],

      // Performance Monitoring
      tracesSampleRate: 0.3, // 30% —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è production (—É–≤–µ–ª–∏—á–µ–Ω–æ —Å 0.1)

      // Session Replay
      replaysSessionSampleRate: 0.1, // 10% –æ–±—ã—á–Ω—ã—Ö —Å–µ—Å—Å–∏–π
      replaysOnErrorSampleRate: 1.0, // 100% —Å–µ—Å—Å–∏–π —Å –æ—à–∏–±–∫–∞–º–∏

      // Profiling –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      profilesSampleRate: 0.3, // 30% –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏—è (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å traces)

      // Environment
      environment: import.meta.env.MODE,
      
      // Release tracking
      release: `unity-v2@${import.meta.env.VITE_APP_VERSION || 'unknown'}`,

      // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ—à–∏–±–æ–∫
      beforeSend(event, hint) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä–∞
        if (event.exception?.values?.[0]?.stacktrace?.frames?.some(
          frame => frame.filename?.includes('chrome-extension://')
        )) {
          return null;
        }

        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏ (–æ–Ω–∏ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã)
        if (event.exception?.values?.[0]?.type === 'NetworkError') {
          return null;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if (hint.originalException instanceof Error) {
          event.contexts = {
            ...event.contexts,
            app: {
              version: import.meta.env.VITE_APP_VERSION,
              build: import.meta.env.VITE_BUILD_ID,
            },
          };
        }

        return event;
      },

      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏
      ignoreErrors: [
        // –û—à–∏–±–∫–∏ –æ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä–∞
        'top.GLOBALS',
        'originalCreateNotification',
        'canvas.contentDocument',
        'MyApp_RemoveAllHighlights',
        'atomicFindClose',
        
        // –û—à–∏–±–∫–∏ —Å–µ—Ç–∏
        'NetworkError',
        'Failed to fetch',
        'Load failed',
        
        // –û—à–∏–±–∫–∏ –æ—Ç —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–æ–≤
        'adsbygoogle',
        
        // –°–ª—É—á–∞–π–Ω—ã–µ –æ—à–∏–±–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
        'ResizeObserver loop limit exceeded',
        'ResizeObserver loop completed with undelivered notifications',
      ],
    });

    console.log('‚úÖ [Sentry] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è production');
  } else {
    console.log('‚ÑπÔ∏è [Sentry] –û—Ç–∫–ª—é—á–µ–Ω –≤ development —Ä–µ–∂–∏–º–µ');
  }
}

/**
 * –ó–∞—Ö–≤–∞—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é
 * 
 * @example
 * try {
 *   riskyOperation();
 * } catch (error) {
 *   captureException(error, { tags: { section: 'payment' } });
 * }
 */
export function captureException(
  error: Error,
  context?: any
) {
  if (import.meta.env.PROD) {
    Sentry.captureException(error, context);
  } else {
    console.error('üî¥ [Sentry Dev]', error, context);
  }
}

/**
 * –ó–∞—Ö–≤–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é
 * 
 * @example
 * captureMessage('User completed onboarding', {
 *   level: 'info',
 *   tags: { flow: 'onboarding' }
 * });
 */
export function captureMessage(
  message: string,
  context?: any
) {
  if (import.meta.env.PROD) {
    Sentry.captureMessage(message, context);
  } else {
    console.log('‚ÑπÔ∏è [Sentry Dev]', message, context);
  }
}

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è Sentry
 * 
 * @example
 * setUser({
 *   id: user.id,
 *   email: user.email,
 *   username: user.name,
 * });
 */
export function setUser(user: Sentry.User | null) {
  if (import.meta.env.PROD) {
    Sentry.setUser(user);
  }
}

/**
 * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ breadcrumb (—Ö–ª–µ–±–Ω–∞—è –∫—Ä–æ—à–∫–∞) –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π
 * 
 * @example
 * addBreadcrumb({
 *   category: 'auth',
 *   message: 'User logged in',
 *   level: 'info',
 * });
 */
export function addBreadcrumb(breadcrumb: Sentry.Breadcrumb) {
  if (import.meta.env.PROD) {
    Sentry.addBreadcrumb(breadcrumb);
  }
}

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–≥–∞ –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –æ—à–∏–±–æ–∫
 * 
 * @example
 * setTag('page', 'admin-dashboard');
 */
export function setTag(key: string, value: string) {
  if (import.meta.env.PROD) {
    Sentry.setTag(key, value);
  }
}

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
 * 
 * @example
 * setContext('character', {
 *   name: 'Mighty Fighter',
 *   age: 19,
 *   attack_type: 'melee',
 * });
 */
export function setContext(name: string, context: Record<string, any>) {
  if (import.meta.env.PROD) {
    Sentry.setContext(name, context);
  }
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ custom span –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 *
 * @example
 * const span = startSpan('fetch-users', 'http.client');
 * try {
 *   const users = await fetchUsers();
 *   span.setStatus('ok');
 *   return users;
 * } catch (error) {
 *   span.setStatus('error');
 *   throw error;
 * } finally {
 *   span.finish();
 * }
 */
export function startSpan(name: string, op: string) {
  if (import.meta.env.PROD) {
    return Sentry.startSpan({ name, op }, (span) => span);
  }
  // Mock span –¥–ª—è development
  return {
    setStatus: () => {},
    finish: () => {},
    setData: () => {},
  };
}

/**
 * Wrapper –¥–ª—è async –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º span
 *
 * @example
 * const users = await withSpan('fetch-users', 'http.client', async () => {
 *   return await fetchUsers();
 * });
 */
export async function withSpan<T>(
  name: string,
  op: string,
  callback: () => Promise<T>
): Promise<T> {
  if (import.meta.env.PROD) {
    return Sentry.startSpan({ name, op }, async () => {
      return await callback();
    });
  }
  return callback();
}

/**
 * Wrapper –¥–ª—è ErrorBoundary —Å Sentry
 *
 * @example
 * <SentryErrorBoundary fallback={<ErrorFallback />}>
 *   <App />
 * </SentryErrorBoundary>
 */
export const SentryErrorBoundary = Sentry.ErrorBoundary;

/**
 * HOC –¥–ª—è –æ–±–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å Sentry profiling
 *
 * @example
 * export default withProfiler(MyComponent);
 */
export const withProfiler = Sentry.withProfiler;

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å Sentry Feedback –≤–∏–¥–∂–µ—Ç –≤—Ä—É—á–Ω—É—é
 *
 * –û–¢–ö–õ–Æ–ß–ï–ù–û - Feedback –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É "Error invoking post: Method not found"
 * Fixes UNITY-V2-B
 *
 * @deprecated –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –≤ Sentry SDK
 */
export function showFeedbackWidget(_openForm: boolean = false) {
  console.warn('‚ö†Ô∏è [Sentry Feedback] –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –≤ SDK');
  // if (import.meta.env.PROD) {
  //   const feedback = Sentry.getFeedback();
  //   if (feedback) {
  //     if (openForm) {
  //       feedback.openDialog();
  //     } else {
  //       feedback.createWidget();
  //     }
  //   }
  // } else {
  //   console.log('‚ÑπÔ∏è [Sentry Feedback] –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤ production', { openForm });
  // }
}

/**
 * –°–∫—Ä—ã—Ç—å Sentry Feedback –≤–∏–¥–∂–µ—Ç
 *
 * –û–¢–ö–õ–Æ–ß–ï–ù–û - Feedback –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É "Error invoking post: Method not found"
 * Fixes UNITY-V2-B
 *
 * @deprecated –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –≤ Sentry SDK
 */
export function hideFeedbackWidget() {
  console.warn('‚ö†Ô∏è [Sentry Feedback] –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –≤ SDK');
  // if (import.meta.env.PROD) {
  //   const feedback = Sentry.getFeedback();
  //   if (feedback) {
  //     feedback.removeWidget();
  //   }
  // }
}

// Re-export Sentry –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
export { Sentry };

