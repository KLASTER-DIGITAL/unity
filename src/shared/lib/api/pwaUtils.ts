/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å PWA
 */

export interface PWAInstallPromptEvent extends Event {
  prompt: () => Promise<void>;
  userChoice: Promise<{ outcome: 'accepted' | 'dismissed' }>;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ –±—Ä–∞—É–∑–µ—Ä PWA —É—Å—Ç–∞–Ω–æ–≤–∫—É
 */
export function isPWASupported(): boolean {
  return 'serviceWorker' in navigator && 'PushManager' in window;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∫ PWA
 */
export function isPWAInstalled(): boolean {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π display-mode
  if (window.matchMedia('(display-mode: standalone)').matches) {
    return true;
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è iOS Safari
  if ((window.navigator as any).standalone === true) {
    return true;
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ URL (–µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ PWA)
  if (document.referrer.startsWith('android-app://')) {
    return true;
  }
  
  return false;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–ª–æ—Å—å –ª–∏ —É–∂–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
 */
export function wasInstallPromptShown(): boolean {
  return localStorage.getItem('installPromptShown') === 'true';
}

/**
 * –ü–æ–º–µ—á–∞–µ—Ç —á—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±—ã–ª–æ –ø–æ–∫–∞–∑–∞–Ω–æ
 */
export function markInstallPromptAsShown(): void {
  localStorage.setItem('installPromptShown', 'true');
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ PWA –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
 */
export function isPWAEnabled(): boolean {
  const pwaEnabled = localStorage.getItem('pwa-enabled');
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é true, –µ—Å–ª–∏ –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
  return pwaEnabled !== 'false';
}

/**
 * –í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç PWA
 */
export function setPWAEnabled(enabled: boolean): void {
  localStorage.setItem('pwa-enabled', enabled ? 'true' : 'false');
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç iOS Safari (PWA —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ-–¥—Ä—É–≥–æ–º—É)
 */
export function isIOSSafari(): boolean {
  const ua = window.navigator.userAgent;
  const iOS = /iPad|iPhone|iPod/.test(ua);
  const webkit = /WebKit/.test(ua);
  const isIOSChrome = /CriOS/.test(ua);
  const isIOSFirefox = /FxiOS/.test(ua);
  
  return iOS && webkit && !isIOSChrome && !isIOSFirefox;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
 */
export function getInstallInstructions(): { platform: string; steps: string[] } {
  const ua = window.navigator.userAgent;
  
  // iOS Safari
  if (isIOSSafari()) {
    return {
      platform: 'iOS Safari',
      steps: [
        '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞',
        '–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –≤–Ω–∏–∑ –∏ –Ω–∞–∂–º–∏—Ç–µ "–ù–∞ —ç–∫—Ä–∞–Ω –î–æ–º–æ–π"',
        '–ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å" –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏'
      ]
    };
  }
  
  // Android Chrome
  if (/Chrome/.test(ua) && /Android/.test(ua)) {
    return {
      platform: 'Android Chrome',
      steps: [
        '–ù–∞–∂–º–∏—Ç–µ –º–µ–Ω—é (—Ç—Ä–∏ —Ç–æ—á–∫–∏) –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É',
        '–í—ã–±–µ—Ä–∏—Ç–µ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" –∏–ª–∏ "–î–æ–±–∞–≤–∏—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω"',
        '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É'
      ]
    };
  }
  
  // Desktop Chrome/Edge
  if (/Chrome|Edg/.test(ua) && !/Mobile/.test(ua)) {
    return {
      platform: 'Desktop (Chrome/Edge)',
      steps: [
        '–ù–∞–∂–º–∏—Ç–µ –∏–∫–æ–Ω–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ',
        '–ò–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é ‚Üí "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"',
        '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É'
      ]
    };
  }
  
  // Firefox Android
  if (/Firefox/.test(ua) && /Android/.test(ua)) {
    return {
      platform: 'Android Firefox',
      steps: [
        '–ù–∞–∂–º–∏—Ç–µ –º–µ–Ω—é (—Ç—Ä–∏ —Ç–æ—á–∫–∏) –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É',
        '–í—ã–±–µ—Ä–∏—Ç–µ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"',
        '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É'
      ]
    };
  }
  
  // –î—Ä—É–≥–∏–µ –±—Ä–∞—É–∑–µ—Ä—ã
  return {
    platform: '–î—Ä—É–≥–æ–π –±—Ä–∞—É–∑–µ—Ä',
    steps: [
      '–û—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é –±—Ä–∞—É–∑–µ—Ä–∞',
      '–ù–∞–π–¥–∏—Ç–µ –æ–ø—Ü–∏—é "–î–æ–±–∞–≤–∏—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω" –∏–ª–∏ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"',
      '–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±—Ä–∞—É–∑–µ—Ä–∞'
    ]
  };
}

/**
 * –õ–æ–≥–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ PWA –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
 */
export function logPWADebugInfo(): void {
  console.group('üîç PWA Debug Information');
  
  console.log('PWA Support:', {
    serviceWorker: 'serviceWorker' in navigator,
    pushManager: 'PushManager' in window,
    beforeInstallPrompt: 'onbeforeinstallprompt' in window,
    notification: 'Notification' in window
  });
  
  console.log('Installation Status:', {
    isPWAInstalled: isPWAInstalled(),
    displayMode: window.matchMedia('(display-mode: standalone)').matches ? 'standalone' : 'browser',
    standalone: (window.navigator as any).standalone,
    wasPromptShown: wasInstallPromptShown()
  });
  
  console.log('PWA Settings:', {
    isPWAEnabled: isPWAEnabled(),
    pwaEnabledValue: localStorage.getItem('pwa-enabled')
  });
  
  console.log('Browser Info:', {
    userAgent: navigator.userAgent,
    isIOSSafari: isIOSSafari(),
    navigatorPlatform: navigator.platform,
    ...getInstallInstructions()
  });
  
  console.log('Service Worker:', {
    controller: navigator.serviceWorker?.controller,
    ready: navigator.serviceWorker?.ready
  });
  
  console.groupEnd();
}
